plugins {
	id 'fabric-loom' version '0.2.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
	maven { url = 'https://aperlambda.github.io/maven' }
    maven {
        name "CottonMC"
        url "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:1.16-pre5"
    mappings "net.fabricmc:yarn:1.16-pre5+build.1:v2"
    modImplementation "net.fabricmc:fabric-loader:0.8.7+build.201"

	// Fabric API. This is technically optional, but you probably want it anyway.
	//modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	implementation "org.aperlambda:lambdajcommon:1.8.0"
	include "org.aperlambda:lambdajcommon:1.8.0"

	//modApi "me.shedaniel.cloth:config-2:2-2.14.1"
	//include "me.shedaniel.cloth:config-2:2-2.14.1"

	modImplementation "io.github.cottonmc:cotton-client-commands:1.0.0+1.15.2"
	include "io.github.cottonmc:cotton-client-commands:1.0.0+1.15.2"

	implementation 'com.google.code.gson:gson:2.8.6'
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
